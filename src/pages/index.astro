---
import { sanityClient, urlFor } from '../lib/sanity';
import Layout from '../layouts/Layout.astro';

const query = `*[_type == "post"] | order(publishedAt desc) {
_id,
title,
slug,
publishedAt,
mainImage,
"author": author->name,
"categories": categories[]->title,
body
}`;

const posts = await sanityClient.fetch(query);
---

<Layout title="Blog Posts">
    <header class="header sticky top-0 z-100">
        <div class="container m-auto pl-[var(">
            <nav class="nav flex md:flex-row flex-col gap-4 md:gap-[var(--space-16)]">
                <div class="nav__brand">
                    <h1 class="nav__title">Learn AI, Keep Job</h1>
                    <p class="nav__subtitle">Easy tips</p>
                </div>
                <div class="nav__menu">
                    <button class="btn btn--outline btn--sm" id="categoryFilter">All Posts</button>
                    <button class="btn btn--outline btn--sm" id="searchBtn">Search</button>
                    <button class="theme-toggle" id="themeToggle" aria-label="Toggle dark mode">
                        <span class="theme-toggle__icon">ðŸŒ™</span>
                    </button>
                </div>
            </nav>
        </div>
    </header>
    <main class="main">
        <h1>Blog Posts</h1>
        <section>
            {posts.length === 0 ? (
            <p>No posts found. Create some posts in your Sanity Studio!</p>
            ) : (
            <div class="posts">
                {posts.map((post: any) => (
                <article class="post">
                    <h2>{post.title}</h2>
                    {post.mainImage && (
                    <img
                        src={urlFor(post.mainImage).width(800).url()}
                        alt={post.title}
                        width="800"
                    />
                    )}
                    {post.publishedAt && (
                    <time>{new Date(post.publishedAt).toLocaleDateString()}</time>
                    )}
                    {post.author && <p>By {post.author}</p>}
                    {post.categories && post.categories.length > 0 && (
                    <div class="categories">
                        {post.categories.map((cat: string) => (
                        <span class="category">{cat}</span>
                        ))}
                    </div>
                    )}
                </article>
                ))}
            </div>
            )}
        </section>
    </main>
</Layout>
