---
import '../styles/global.css';

export interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="AI + Photography Blog" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<script is:inline>
			// Check for saved theme or default to system preference
			const theme = localStorage.getItem('theme') ||
				(window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
			
			// Apply theme immediately to prevent flash
			if (theme === 'dark') {
				document.documentElement.classList.add('dark');
			} else {
				document.documentElement.classList.remove('dark');
			}
		</script>
	</head>
	<body class="bg-background text-foreground">
		<slot />
		<script is:inline>
			// Theme toggle functionality
			function toggleTheme() {
				const isDark = document.documentElement.classList.contains('dark');
				if (isDark) {
					document.documentElement.classList.remove('dark');
					localStorage.setItem('theme', 'light');
				} else {
					document.documentElement.classList.add('dark');
					localStorage.setItem('theme', 'dark');
				}
				
				// Update theme toggle icon
				updateThemeIcon();
			}
			
			function updateThemeIcon() {
				const themeIcon = document.querySelector('.theme-toggle__icon');
				if (themeIcon) {
					const isDark = document.documentElement.classList.contains('dark');
					themeIcon.textContent = isDark ? '☀️' : '🌙';
				}
			}
			
			// Initialize theme toggle button
			document.addEventListener('DOMContentLoaded', () => {
				const themeToggle = document.getElementById('themeToggle');
				if (themeToggle) {
					themeToggle.addEventListener('click', toggleTheme);
					updateThemeIcon();
				}
			});
		</script>
	</body>
</html>
